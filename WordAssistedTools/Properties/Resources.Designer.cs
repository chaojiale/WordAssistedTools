//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WordAssistedTools.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WordAssistedTools.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 我喜欢你꒰⑅•ᴗ•⑅꒱！——乐乐
        ///要有最朴实的生活和最遥远的梦想，即使明日天寒地冻，路遥马亡！
        ///一旦有了意志，脚步也会轻松起来。
        ///战胜困难，走出困境，成功就会属于你。
        ///跌倒了，要自己爬起来。你将会成为了不起的人！
        ///一切伟大的行动和思想，都有一个微不足道的开始。
        ///世界上不可能的事情，是想出来的；世界上可能的事情，是做出来的。
        ///执着，精巧像林间小鹿；执着，坚定似参天大树；执着，信念如飞流瀑布；只要拥有执着，坚持的去付出，成功的种子才能够破土而出。
        ///不从泥泞不堪的小道上迈步，就踏不上铺满鲜花的大路。
        ///人生难免要遭遇挫折与失败，与其用泪水洗刷悔恨，不如用微笑去迎接新的挑战。
        ///行路不仅仅在于快慢，还在于是否能够持续；前进不仅仅在于速度，更在于能否保持正确方向。
        ///没有人事先了解自己到底有多大的力量，直到他试过以后才知道。——歌德
        ///对于不屈不挠的人来说，没有失败这回事。——俾斯麦
        ///要成功不需要什么特别的才能，只要把你能做的小事做得好就行了。——维龙
        ///成功的唯一秘诀——坚持最后一分钟。——柏拉图
        ///只有胜利才能生存，只有成功才有代价，只有耕耘才有收获。
        ///只有把抱怨环境的心情，化为上进的力量，才是 [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string EncourageLib {
            get {
                return ResourceManager.GetString("EncourageLib", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        public static System.Drawing.Bitmap image {
            get {
                object obj = ResourceManager.GetObject("image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 # 许可信息
        ///## 使用的nuget包列表
        ///```xml
        ///&lt;ItemGroup&gt;
        ///  &lt;PackageReference Include=&quot;CommunityToolkit.Mvvm&quot;&gt;
        ///    &lt;Version&gt;8.4.0&lt;/Version&gt;
        ///  &lt;/PackageReference&gt;
        ///  &lt;PackageReference Include=&quot;DiffPlex.Wpf&quot;&gt;
        ///    &lt;Version&gt;1.4.0&lt;/Version&gt;
        ///  &lt;/PackageReference&gt;
        ///  &lt;PackageReference Include=&quot;HandyControl&quot;&gt;
        ///    &lt;Version&gt;3.5.1&lt;/Version&gt;
        ///  &lt;/PackageReference&gt;
        ///  &lt;PackageReference Include=&quot;Markdig.Wpf&quot;&gt;
        ///    &lt;Version&gt;0.5.0.1&lt;/Version&gt;
        ///  &lt;/PackageReference&gt;
        ///  &lt;PackageReference Include=&quot;Material.Icons.WPF&quot;&gt;
        ///    &lt;Version&gt;2 [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string License {
            get {
                return ResourceManager.GetString("License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 # 帮助与更新日志
        ///## 当前版本 1.0
        ///### 基础信息
        ///+ 最佳平台：Office 365（建议安装64位）  
        ///+ 推荐平台：Office 2016、2019、2021（建议安装64位）
        ///+ 可用平台：WPS（32位，无需安装Microsoft Office，但插件的部分图标无法显示，部分功能可能无法正常使用）
        ///
        ///### 插件依赖
        ///+ .NET Framework：4.8（基础运行架构，自2019年以后的Windows10已随系统安装，通常无需准备）
        ///+ Microsoft Edge（用于右侧边栏网页浏览，Windows10及以上操作系统已随系统安装，通常无需准备）
        ///
        ///### 本版已知问题
        ///+ 暂无
        ///
        ///## 版本1.0
        ///### 更新内容
        ///#### 新增
        ///+ 提取Word标题或正文至剪贴板功能
        ///+ 以另存为HTML或者修改为zip后缀的方式提取Word中所有图片的原图功能
        ///+ AI对话功能，在Word侧边栏中打开浏览器
        ///+ AI模板，将常用语存储为模板，方便构建Prompt
        ///+ API请求与文档集成
        ///+ 用户默认设置的AI页面
        ///#### 修改
        ///+ 暂无   [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string Readme {
            get {
                return ResourceManager.GetString("Readme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 # 翻译API开发指南
        ///开发者需要引用WordAssistedTools.SDK，想要实现几个平台的翻译API，就创建几个类，每个类需要继承BaseTranslator类，然后实现其中的抽象属性和方法。  
        ///开发完毕后，将类库文件复制到WordAssistedTools的Translators文件夹下，插件在加载时能够自动检测可用的翻译API。  
        ///该BaseTranslator类的定义如下：  
        ///```cs
        ///public abstract class BaseTranslator {
        ///  /// &lt;summary&gt;
        ///  /// 翻译API的默认名称，后期可由用户定义
        ///  /// &lt;/summary&gt;
        ///  public abstract string DefaultName { get; }
        ///
        ///  /// &lt;summary&gt;
        ///  /// 翻译API的请求链接
        ///  /// &lt;/summary&gt;
        ///  public abstract string BaseUrl { get; }
        ///
        ///  /// &lt;summary&gt;
        ///  /// 指示翻译API的密钥填写格式
        ///  /// &lt;/summ [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string TranslatorDevelopGuide {
            get {
                return ResourceManager.GetString("TranslatorDevelopGuide", resourceCulture);
            }
        }
    }
}
